{"version":3,"sources":["services/moviesApi.js","services/authApi.js","store/AuthContext.js","components/Sidebar/NavItem.js","components/Sidebar/Sidebar.js","components/Details/MovieDetails.js","components/Layout/Footer.js","services/gamesApi.js","store/GamesContext.js","components/Card/GameCard.js","components/Pages/Home/GameSection.js","store/MoviesContext.js","components/Card/MovieCard.js","components/Pages/Home/MovieSection.js","components/Pages/Home/Home.js","ColorModeSwitcher.js","components/Layout/Nav.js","components/Details/GameDetails.js","components/ListTable/ListTable.js","components/MovieList/MovieList.js","components/MovieForm/MovieForm.js","components/Pages/Movies/Movies.js","components/Pages/Games/Games.js","components/Auth/SignIn.js","components/Auth/ChangePassword.js","components/Auth/SignUp.js","components/GameList/GameList.js","components/GameForm/GameForm.js","routes/Routes.js","App.js","index.js"],"names":["API_ENDPOINT","getMovies","a","axios","get","result","axiosResult","data","movie","post","headers","Authorization","Cookies","id","delete","getMovie","put","console","log","userData","AuthContext","createContext","AuthProvider","props","useState","loginStatus","setLoginStatus","history","useHistory","toast","useToast","useEffect","undefined","Provider","value","userRegister","authRegister","then","push","title","description","status","duration","isClosable","position","catch","err","userLogin","authLogin","res","user","token","set","name","expires","email","userChangePassword","authChangePassword","children","NavItem","icon","onClick","active","navSize","path","flexDir","w","alignItems","placement","as","ReachLink","backgroundColor","px","py","borderRadius","_hover","textDecor","to","fontSize","color","ml","display","Sidebar","useContext","sidebarCollapsed","localStorage","getItem","isExpanded","setIsExpanded","bg","useColorModeValue","pos","left","h","my","boxShadow","justifyContent","transition","p","background","mt","size","setItem","removeItem","allowMultiple","flex","textAlign","MdMovie","pb","MdFormatListBulleted","MdPlaylistAdd","MdGames","FaUserAlt","FaKey","FiLogOut","remove","mb","align","src","wordBreak","MovieDetails","movieDetails","setMovieDetails","Id","useParams","getMovieDetails","mx","data-aos","rounded","mr","maxW","objectFit","maxH","image_url","alt","h1","fontWeight","year","colorScheme","genre","Time","StarIcon","rating","overflow","review","Footer","Stack","direction","base","md","spacing","justify","getGames","game","getGame","GamesContext","initialGameInput","singlePlayer","multiplayer","platform","release","GamesProvider","games","setGames","fetchStatus","setFetchStatus","isLoading","setIsLoading","currentId","setCurrentId","input","setInput","getGameList","useCallback","handleChange","event","target","indexOf","addGameHandler","addGame","deleteGameHandler","deleteGame","getGameHandler","updateGameHandler","updateGame","GameCard","borderWidth","shadow","transform","textDecoration","roundedTop","lineHeight","isTruncated","label","aria-label","GameSection","sortGame","sort","b","created_at","rightIcon","ArrowForward","variant","borderColor","templateColumns","lg","xl","gap","autoFlow","map","index","MoviesContext","MoviesProvider","movies","setMovies","getMovieList","addMovieHandler","addMovie","parseInt","deleteMovieHandler","deleteMovie","getMovieHandler","updateMovieHandler","updateMovie","MovieCard","letterSpacing","textTransform","Calendar","d","Array","fill","_","i","Star","MovieSection","sortMovie","Home","ColorModeSwitcher","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","marginLeft","Nav","mobileNav","useDisclosure","auth","href","avatar","Button","cursor","minW","Fragment","header","leftIcon","isOpen","GameDetails","gameDetails","setGameDetails","getGameDetails","maxWidth","flexGrow","MdDevices","MdVideogameAsset","FaUserFriends","ListTable","columns","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","prepareRow","pageIndex","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","isNumeric","render","span","pl","isSorted","isSortedDesc","TriangleDown","TriangleUp","row","getRowProps","cells","cell","getCellProps","length","disabled","MovieList","setData","React","setIsOpen","onClose","cancelRef","useRef","movieId","setMovieId","search","setSearch","filter","setFilter","item","toLowerCase","includes","filteredData","toString","filterMovie","handleFilter","useMemo","Header","accessor","Cell","substr","boxSize","Edit","Delete","Add","placeholder","onChange","v","findIndex","t","pointerEvents","type","_focus","leastDestructiveRef","ref","MovieForm","ArrowBack","colSpan","form","onSubmit","e","preventDefault","sm","GridItem","isRequired","htmlFor","min","max","allowMouseWheel","defaultValue","Movies","Games","SignIn","password","handleSubmit","ChangePassword","current_password","new_password","new_confirm_password","SignUp","GameList","gameId","setGameId","filterGame","GameForm","isChecked","Routes","LoginRoute","RestrictedRoutes","theme","exact","App","AOS","init","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2158b3e3.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_ENDPOINT = `https://backendexample.sanbersy.com/api/data-movie`;\r\n\r\nexport async function getMovies() {\r\n  const result = await axios.get(API_ENDPOINT);\r\n  const axiosResult = result.data;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function addMovie(movie) {\r\n  const result = await axios.post(API_ENDPOINT, movie, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function deleteMovie(id) {\r\n  const result = await axios.delete(`${API_ENDPOINT}/${id}`, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function getMovie(id) {\r\n  const result = await axios.get(`${API_ENDPOINT}/${id}`);\r\n  const axiosResult = result.data;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function updateMovie(id, movie) {\r\n  const result = await axios.put(`${API_ENDPOINT}/${id}`, movie, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result.data;\r\n\r\n  console.log(axiosResult);\r\n  return axiosResult;\r\n}\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_ENDPOINT = `https://backendexample.sanbersy.com/api`;\r\n\r\nexport async function authRegister(userData) {\r\n  const result = await axios.post(`${API_ENDPOINT}/register`, userData);\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function authLogin(userData) {\r\n  const result = await axios.post(`${API_ENDPOINT}/user-login`, userData);\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function authChangePassword(userData) {\r\n  const result = await axios.post(`${API_ENDPOINT}/change-password`, userData, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  authRegister,\r\n  authLogin,\r\n  authChangePassword,\r\n} from '../services/authApi';\r\nimport Cookies from 'js-cookie';\r\nimport { useToast } from '@chakra-ui/react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = props => {\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n  let history = useHistory();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    if (Cookies.get('token') !== undefined) {\r\n      setLoginStatus(true);\r\n    }\r\n  }, []);\r\n\r\n  const userRegister = userData => {\r\n    authRegister(userData)\r\n      .then(() => {\r\n        history.push('/sign-in');\r\n        toast({\r\n          title: 'Registration successful',\r\n          description: `Your account was created successfully `,\r\n          status: 'success',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      })\r\n      .catch(err => {\r\n        toast({\r\n          title: 'Sign Up failed.',\r\n          description: 'Please fill in all the fields correctly.',\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      });\r\n  };\r\n\r\n  const userLogin = userData => {\r\n    authLogin(userData)\r\n      .then(res => {\r\n        let user = res.data.user;\r\n        let token = res.data.token;\r\n        Cookies.set('user', user.name, { expires: 1 });\r\n        Cookies.set('email', user.email, { expires: 1 });\r\n        Cookies.set('token', token, { expires: 1 });\r\n        history.push('/');\r\n        setLoginStatus(true);\r\n        toast({\r\n          title: 'Login successful',\r\n          description: `Welcome, ${user.name}`,\r\n          status: 'success',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      })\r\n      .catch(err => {\r\n        toast({\r\n          title: 'Login failed.',\r\n          description: 'Email or password is not correct .',\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      });\r\n  };\r\n\r\n  const userChangePassword = userData => {\r\n    authChangePassword(userData)\r\n      .then(() => {\r\n        history.push('/');\r\n        toast({\r\n          title: 'Change password successful.',\r\n          description: `Your password has been changed successfully `,\r\n          status: 'success',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top-right',\r\n        });\r\n      })\r\n      .catch(err => {\r\n        toast({\r\n          title: 'Change password failed.',\r\n          description: 'Please check your current password',\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top-right',\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        loginStatus,\r\n        setLoginStatus,\r\n        userRegister,\r\n        userLogin,\r\n        userChangePassword,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Flex, Text, Icon, Link, Menu, MenuButton } from '@chakra-ui/react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\n\r\nexport default function NavItem({\r\n  icon,\r\n  title,\r\n  onClick,\r\n  active,\r\n  navSize,\r\n  path,\r\n}) {\r\n  return (\r\n    <Flex\r\n      flexDir=\"column\"\r\n      w=\"100%\"\r\n      alignItems={!navSize ? 'center' : 'flex-start'}\r\n    >\r\n      <Menu placement=\"right\">\r\n        <Link\r\n          as={ReachLink}\r\n          backgroundColor={active && '#AEC8CA'}\r\n          px={3}\r\n          py={1}\r\n          borderRadius={8}\r\n          _hover={{ textDecor: 'none', backgroundColor: '#AEC8CA' }}\r\n          w={navSize && '100%'}\r\n          to={path}\r\n        >\r\n          <MenuButton w=\"100%\" onClick={onClick}>\r\n            <Flex alignItems=\"center\">\r\n              <Icon\r\n                as={icon}\r\n                fontSize=\"lg\"\r\n                color={active ? '#82AAAa' : 'gray.500'}\r\n              />\r\n              <Text ml={5} display={!navSize ? 'none' : 'block'}>\r\n                {title}\r\n              </Text>\r\n            </Flex>\r\n          </MenuButton>\r\n        </Link>\r\n      </Menu>\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n  Flex,\r\n  Text,\r\n  IconButton,\r\n  Divider,\r\n  Avatar,\r\n  Heading,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Icon,\r\n} from '@chakra-ui/react';\r\nimport { FiMenu, FiLogOut } from 'react-icons/fi';\r\nimport {\r\n  MdMovie,\r\n  MdGames,\r\n  MdPlaylistAdd,\r\n  MdFormatListBulleted,\r\n} from 'react-icons/md';\r\nimport { FaUserAlt, FaKey } from 'react-icons/fa';\r\nimport NavItem from './NavItem';\r\nimport Cookies from 'js-cookie';\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Sidebar() {\r\n  const user = Cookies.get('user');\r\n  const { setLoginStatus } = useContext(AuthContext);\r\n  const sidebarCollapsed = localStorage.getItem('sidebar-collapsed');\r\n  const [isExpanded, setIsExpanded] = useState(sidebarCollapsed ? false : true);\r\n  const bg = useColorModeValue('gray.100', 'gray.900');\r\n  let history = useHistory();\r\n  const handleLogout = () => {\r\n    setLoginStatus(false);\r\n    Cookies.remove('email');\r\n    Cookies.remove('user');\r\n    Cookies.remove('token');\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  const handleToggler = () => {\r\n    if (isExpanded) {\r\n      setIsExpanded(false);\r\n      localStorage.setItem('sidebar-collapsed', true);\r\n      return;\r\n    }\r\n    setIsExpanded(true);\r\n    localStorage.removeItem('sidebar-collapsed');\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      pos=\"sticky\"\r\n      left=\"5\"\r\n      h=\"500px\"\r\n      my=\"2.5vh\"\r\n      boxShadow=\"0 4px 12px 0 rgba(0, 0, 0, 0.05)\"\r\n      borderRadius={!isExpanded ? '15px' : '20px'}\r\n      w={!isExpanded ? '80px' : '250px'}\r\n      flexDir=\"column\"\r\n      justifyContent=\"space-between\"\r\n      bg={bg}\r\n      transition=\"0.3s\"\r\n    >\r\n      <Flex\r\n        p=\"5%\"\r\n        flexDir=\"column\"\r\n        w=\"100%\"\r\n        alignItems={!isExpanded ? 'center' : 'flex-start'}\r\n        as=\"nav\"\r\n      >\r\n        <IconButton\r\n          background=\"none\"\r\n          mt={5}\r\n          size=\"lg\"\r\n          _hover={{ background: 'none' }}\r\n          icon={<FiMenu />}\r\n          onClick={handleToggler}\r\n        />\r\n        <Accordion\r\n          transition=\"0.3s\"\r\n          allowMultiple\r\n          w={!isExpanded ? '80px' : '220px'}\r\n        >\r\n          <AccordionItem>\r\n            <h2>\r\n              <AccordionButton>\r\n                <Flex alignItems=\"center\" flex=\"1\" textAlign=\"left\">\r\n                  <Icon as={MdMovie} fontSize=\"xl\" />\r\n                  <Text\r\n                    ml={5}\r\n                    textAlign=\"left\"\r\n                    display={!isExpanded ? 'none' : 'flex'}\r\n                  >\r\n                    Movies\r\n                  </Text>\r\n                </Flex>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n            </h2>\r\n            <AccordionPanel pb={2}>\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={MdFormatListBulleted}\r\n                title=\"Movie List\"\r\n                path=\"/movie/list\"\r\n              />\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={MdPlaylistAdd}\r\n                title=\"Add New Movie\"\r\n                path=\"/movie/add\"\r\n              />\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n\r\n          <AccordionItem>\r\n            <h2>\r\n              <AccordionButton>\r\n                <Flex alignItems=\"center\" flex=\"1\" textAlign=\"left\">\r\n                  <Icon as={MdGames} fontSize=\"xl\" />\r\n                  <Text\r\n                    ml={5}\r\n                    textAlign=\"left\"\r\n                    display={!isExpanded ? 'none' : 'flex'}\r\n                  >\r\n                    Games\r\n                  </Text>\r\n                </Flex>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n            </h2>\r\n            <AccordionPanel pb={2}>\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={MdFormatListBulleted}\r\n                title=\"Game List\"\r\n                path=\"/game/list\"\r\n              />\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={MdPlaylistAdd}\r\n                title=\"Add New Game\"\r\n                path=\"/game/add\"\r\n              />\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n\r\n          <AccordionItem>\r\n            <h2>\r\n              <AccordionButton>\r\n                <Flex alignItems=\"center\" flex=\"1\" textAlign=\"left\">\r\n                  <Icon as={FaUserAlt} fontSize=\"xl\" />\r\n                  <Text\r\n                    ml={5}\r\n                    textAlign=\"left\"\r\n                    display={!isExpanded ? 'none' : 'flex'}\r\n                  >\r\n                    Account\r\n                  </Text>\r\n                </Flex>\r\n                <AccordionIcon />\r\n              </AccordionButton>\r\n            </h2>\r\n            <AccordionPanel pb={2}>\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={FaKey}\r\n                title=\"Change Password\"\r\n                path=\"/change-password\"\r\n              />\r\n              <NavItem\r\n                navSize={isExpanded}\r\n                icon={FiLogOut}\r\n                title=\"Logout\"\r\n                path=\"#\"\r\n                onClick={handleLogout}\r\n              />\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      </Flex>\r\n\r\n      <Flex\r\n        p=\"5%\"\r\n        flexDir=\"column\"\r\n        w=\"100%\"\r\n        alignItems={!isExpanded ? 'center' : 'flex-start'}\r\n        mb={4}\r\n      >\r\n        <Divider display={!isExpanded ? 'none' : 'flex'} />\r\n        <Flex mt={4} align=\"center\" ml={!isExpanded ? 0 : 2}>\r\n          <Avatar size=\"sm\" src=\"avatar-1.jpg\" />\r\n          <Flex flexDir=\"column\" ml={4} display={!isExpanded ? 'none' : 'flex'}>\r\n            <Heading as=\"h3\" size=\"sm\" wordBreak=\"break-word\">\r\n              {user}\r\n            </Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  chakra,\r\n  Box,\r\n  Flex,\r\n  Image,\r\n  Badge,\r\n  useColorModeValue,\r\n  Text,\r\n  Icon,\r\n  Tab,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  TabPanel,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport { StarIcon, TimeIcon } from '@chakra-ui/icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovie } from '../../services/moviesApi';\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst MovieDetails = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const [movieDetails, setMovieDetails] = useState([]);\r\n  const { Id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n      const data = await getMovie(Id);\r\n      setMovieDetails(data);\r\n    };\r\n\r\n    getMovieDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box mx=\"auto\" data-aos=\"zoom-out\">\r\n        <Flex w=\"1000px\" mx=\"auto\" my={8} rounded=\"lg\">\r\n          <Box mr={4} maxW=\"400px\">\r\n            <Image\r\n              rounded=\"lg\"\r\n              objectFit=\"cover\"\r\n              w=\"400px\"\r\n              maxH=\"600px\"\r\n              src={movieDetails.image_url}\r\n              alt={movieDetails.title}\r\n            />\r\n          </Box>\r\n          <Box p={4} w=\"650px\">\r\n            <chakra.h1 fontSize=\"3xl\" fontWeight=\"bold\">\r\n              {`${movieDetails.title} (${movieDetails.year})`}\r\n            </chakra.h1>\r\n            <Flex alignItems=\"center\">\r\n              <Badge colorScheme=\"blue\" fontSize=\"0.8em\" mr={1}>\r\n                {movieDetails.genre}\r\n              </Badge>\r\n              &bull;\r\n              <Badge colorScheme=\"cyan\" fontSize=\"0.8em\" ml={1}>\r\n                <TimeIcon mr={1} />\r\n                {movieDetails.duration} Menit\r\n              </Badge>\r\n            </Flex>\r\n            <Box>\r\n              <Flex\r\n                alignItems=\"center\"\r\n                mt={4}\r\n                color={useColorModeValue('gray.700', 'gray.200')}\r\n              >\r\n                <Icon as={StarIcon} h={6} w={6} mr={1} />\r\n                <chakra.h1 px={1} fontSize=\"lg\">\r\n                  {movieDetails.rating}/10\r\n                </chakra.h1>\r\n              </Flex>\r\n            </Box>\r\n            <Tabs mt={4} w=\"auto\">\r\n              <TabList>\r\n                <Tab>Description</Tab>\r\n                <Tab>Review</Tab>\r\n              </TabList>\r\n\r\n              <TabPanels>\r\n                <TabPanel overflow=\"auto\" h=\"400px\">\r\n                  <Text as=\"i\">{movieDetails.description}</Text>\r\n                </TabPanel>\r\n                <TabPanel overflow=\"auto\" h=\"230px\">\r\n                  <Text>{movieDetails.review}</Text>\r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Box\r\n      bg={useColorModeValue('gray.50', 'gray.900')}\r\n      color={useColorModeValue('gray.700', 'gray.200')}\r\n      mt=\"auto\"\r\n    >\r\n      <Container\r\n        as={Stack}\r\n        maxW={'6xl'}\r\n        py={4}\r\n        direction={{ base: 'column', md: 'row' }}\r\n        spacing={4}\r\n        justify={{ base: 'center', md: 'center' }}\r\n        align={{ base: 'center', md: 'center' }}\r\n      >\r\n        <Text>© Farhan Mubarok - Jabarcodingcamp 2021</Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_ENDPOINT = `https://backendexample.sanbersy.com/api/data-game`;\r\n\r\nexport async function getGames() {\r\n  const result = await axios.get(API_ENDPOINT);\r\n  const axiosResult = result.data;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function addGame(game) {\r\n  const result = await axios.post(API_ENDPOINT, game, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function deleteGame(id) {\r\n  const result = await axios.delete(`${API_ENDPOINT}/${id}`, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function getGame(id) {\r\n  const result = await axios.get(`${API_ENDPOINT}/${id}`);\r\n  const axiosResult = result.data;\r\n\r\n  return axiosResult;\r\n}\r\n\r\nexport async function updateGame(id, game) {\r\n  const result = await axios.put(`${API_ENDPOINT}/${id}`, game, {\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('token') },\r\n  });\r\n  const axiosResult = result.data;\r\n\r\n  console.log(axiosResult);\r\n  return axiosResult;\r\n}\r\n","import React, { useState, createContext, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport {\r\n  addGame,\r\n  deleteGame,\r\n  getGame,\r\n  getGames,\r\n  updateGame,\r\n} from '../services/gamesApi';\r\n\r\nexport const GamesContext = createContext();\r\n\r\nexport const initialGameInput = {\r\n  name: '',\r\n  genre: '',\r\n  singlePlayer: false,\r\n  multiplayer: false,\r\n  platform: '',\r\n  release: '2000',\r\n  image_url: '',\r\n};\r\n\r\nexport const GamesProvider = props => {\r\n  const [games, setGames] = useState([]);\r\n  const [fetchStatus, setFetchStatus] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const [input, setInput] = useState(initialGameInput);\r\n  let history = useHistory();\r\n  const toast = useToast();\r\n\r\n  const getGameList = useCallback(async () => {\r\n    const data = await getGames();\r\n    setGames(data);\r\n    setIsLoading(false);\r\n  }, [getGames]);\r\n\r\n  useEffect(() => {\r\n    if (fetchStatus) {\r\n      getGameList();\r\n      setFetchStatus(false);\r\n      setIsLoading(true);\r\n    }\r\n  }, [fetchStatus]);\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n    let gameType = ['singlePlayer', 'multiplayer'];\r\n    if (gameType.indexOf(name) === -1) setInput({ ...input, [name]: value });\r\n    else setInput({ ...input, [name]: !input[name] });\r\n  };\r\n\r\n  const addGameHandler = () => {\r\n    addGame({\r\n      name: input.name,\r\n      genre: input.genre,\r\n      singlePlayer: input.singlePlayer,\r\n      multiplayer: input.multiplayer,\r\n      platform: input.platform,\r\n      release: input.release,\r\n      image_url: input.image_url,\r\n    }).then(() => {\r\n      setFetchStatus(true);\r\n      history.push('/game/list');\r\n      toast({\r\n        title: 'Success',\r\n        description: `Successfully added new game`,\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: 'top',\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateGameHandler = () => {\r\n    updateGame(currentId, {\r\n      name: input.name,\r\n      genre: input.genre,\r\n      singlePlayer: input.singlePlayer,\r\n      multiplayer: input.multiplayer,\r\n      platform: input.platform,\r\n      release: input.release,\r\n      image_url: input.image_url,\r\n    }).then(() => {\r\n      setFetchStatus(true);\r\n      history.push('/game/list');\r\n      toast({\r\n        title: 'Success',\r\n        description: `Game updated`,\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: 'top',\r\n      });\r\n    });\r\n  };\r\n\r\n  const getGameHandler = id => {\r\n    getGame(id).then(res => {\r\n      setInput({\r\n        id: res.id,\r\n        name: res.name ?? 'null',\r\n        genre: res.genre ?? 'null',\r\n        singlePlayer: res.singlePlayer ?? false,\r\n        multiplayer: res.multiplayer ?? false,\r\n        platform: res.platform ?? 'null',\r\n        release: res.release ?? 0,\r\n        image_url: res.image_url ?? 'null',\r\n      });\r\n      setCurrentId(res.id);\r\n      console.log(res);\r\n      console.log(currentId);\r\n    });\r\n  };\r\n\r\n  const deleteGameHandler = id => {\r\n    deleteGame(id).then(() => {\r\n      toast({\r\n        title: 'Success',\r\n        description: `Selected movie successfully removed`,\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: 'top',\r\n      });\r\n      setFetchStatus(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GamesContext.Provider\r\n      value={{\r\n        games,\r\n        setGames,\r\n        isLoading,\r\n        setIsLoading,\r\n        setFetchStatus,\r\n        fetchStatus,\r\n        handleChange,\r\n        currentId,\r\n        setCurrentId,\r\n        input,\r\n        setInput,\r\n        addGameHandler,\r\n        deleteGameHandler,\r\n        getGameHandler,\r\n        updateGameHandler,\r\n        getGameList,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GamesContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  chakra,\r\n  Box,\r\n  Flex,\r\n  Image,\r\n  useColorModeValue,\r\n  Link,\r\n  Tooltip,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\nimport { MdDevices } from 'react-icons/md';\r\nconst GameCard = ({ id, name, platform, image_url }) => {\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        bg={useColorModeValue('gray.50', 'gray.700')}\r\n        maxW=\"250px\"\r\n        maxH=\"500px\"\r\n        borderWidth=\"1px\"\r\n        rounded=\"lg\"\r\n        shadow=\"lg\"\r\n        transform=\"scale(1.0)\"\r\n        transition=\"0.2s ease-in-out\"\r\n        overflow=\"hidden\"\r\n        _hover={{\r\n          transform: 'scale(1.05)',\r\n        }}\r\n      >\r\n        <Link\r\n          textDecoration=\"none\"\r\n          _hover={{ textDecoration: 'none' }}\r\n          as={ReachLink}\r\n          to={`/game/details/${id}`}\r\n        >\r\n          <Image\r\n            src={image_url ?? 'null'}\r\n            alt={name}\r\n            roundedTop=\"lg\"\r\n            objectFit=\"cover\"\r\n            w=\"300px\"\r\n            h=\"300px\"\r\n          />\r\n        </Link>\r\n\r\n        <Box p=\"4\">\r\n          <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" isTruncated>\r\n            <Link as={ReachLink} to={`/game/details/${id}`}>\r\n              <Tooltip label={name ?? 'null'} aria-label=\"A tooltip\">\r\n                {name ?? 'null'}\r\n              </Tooltip>\r\n            </Link>\r\n          </Box>\r\n\r\n          <Flex alignItems=\"center\" mt={1}>\r\n            <MdDevices />\r\n            <chakra.h1\r\n              px={2}\r\n              fontSize=\"sm\"\r\n              color=\"gray.500\"\r\n              fontWeight=\"semibold\"\r\n              isTruncated\r\n            >\r\n              {platform ?? 'null'}\r\n            </chakra.h1>\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default GameCard;\r\n","import {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Divider,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Spinner,\r\n  Link,\r\n  Button,\r\n} from '@chakra-ui/react';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\nimport { GamesContext } from '../../../store/GamesContext';\r\nimport GameCard from '../../Card/GameCard';\r\n\r\nconst GameSection = () => {\r\n  const { games, isLoading, setFetchStatus } = useContext(GamesContext);\r\n  useEffect(() => {\r\n    setFetchStatus(true);\r\n  }, []);\r\n\r\n  const sortGame = games.sort((a, b) => (a.created_at < b.created_at ? 1 : -1));\r\n\r\n  return (\r\n    <Box>\r\n      <VStack spacing={4} align=\"stretch\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading fontSize={'4xl'}>Latest Games</Heading>\r\n          <Link as={ReachLink} to=\"/games\">\r\n            <Button\r\n              rightIcon={<ArrowForwardIcon />}\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n            >\r\n              See more\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        <Divider borderColor=\"gray.200\" />\r\n        {isLoading ? (\r\n          <Box textAlign=\"center\">\r\n            <Spinner size=\"xl\" />\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Grid\r\n              templateColumns={{\r\n                base: 'repeat(2, 1fr)',\r\n                md: 'repeat(3, 1fr)',\r\n                lg: 'repeat(4, 1fr)',\r\n                xl: 'repeat(5, minmax(0, 1fr))',\r\n              }}\r\n              gap={3}\r\n              autoFlow=\"row\"\r\n            >\r\n              {sortGame?.map(\r\n                (game, index) =>\r\n                  index < 5 && (\r\n                    <GridItem key={game.id}>\r\n                      <GameCard\r\n                        id={game.id}\r\n                        name={game.name}\r\n                        image_url={game.image_url}\r\n                        release={game.release}\r\n                        platform={game.platform}\r\n                        genre={game.genre}\r\n                        singlePlayer={game.singlePlayer}\r\n                        multiplayer={game.multiplayer}\r\n                      />\r\n                    </GridItem>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GameSection;\r\n","import React, { useState, createContext, useEffect, useCallback } from 'react';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  addMovie,\r\n  deleteMovie,\r\n  getMovie,\r\n  getMovies,\r\n  updateMovie,\r\n} from '../services/moviesApi';\r\n\r\nexport const MoviesContext = createContext();\r\n\r\nexport const MoviesProvider = props => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [fetchStatus, setFetchStatus] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const [input, setInput] = useState({\r\n    title: '',\r\n    description: '',\r\n    year: 1980,\r\n    duration: 0,\r\n    genre: '',\r\n    rating: 0,\r\n    review: '',\r\n    image_url: '',\r\n  });\r\n  let history = useHistory();\r\n  const toast = useToast();\r\n\r\n  const getMovieList = useCallback(async () => {\r\n    const data = await getMovies();\r\n    setMovies(data);\r\n    setIsLoading(false);\r\n  }, [getMovies]);\r\n\r\n  useEffect(() => {\r\n    if (fetchStatus) {\r\n      getMovieList();\r\n      setFetchStatus(false);\r\n      setIsLoading(true);\r\n    }\r\n  }, [fetchStatus]);\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const addMovieHandler = () => {\r\n    addMovie({\r\n      title: input.title,\r\n      description: input.description,\r\n      year: parseInt(input.year),\r\n      duration: parseInt(input.duration),\r\n      genre: input.genre,\r\n      rating: parseInt(input.rating),\r\n      review: input.review,\r\n      image_url: input.image_url,\r\n    }).then(() => {\r\n      setFetchStatus(true);\r\n      history.push('/movie/list');\r\n      toast({\r\n        title: 'Success',\r\n        description: `Successfully added new movie`,\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: 'top',\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateMovieHandler = () => {\r\n    updateMovie(currentId, {\r\n      title: input.title,\r\n      description: input.description,\r\n      year: parseInt(input.year),\r\n      duration: parseInt(input.duration),\r\n      genre: input.genre,\r\n      rating: parseInt(input.rating),\r\n      review: input.review,\r\n      image_url: input.image_url,\r\n    })\r\n      .then(() => {\r\n        setFetchStatus(true);\r\n        history.push('/movie/list');\r\n        toast({\r\n          title: 'Success',\r\n          description: `Movie updated`,\r\n          status: 'success',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n      })\r\n      .catch(() => {\r\n        toast({\r\n          title: 'Error',\r\n          description: `Data not found`,\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n        setFetchStatus(true);\r\n      });\r\n  };\r\n\r\n  const deleteMovieHandler = id => {\r\n    deleteMovie(id)\r\n      .then(() => {\r\n        toast({\r\n          title: 'Success',\r\n          description: `Selected movie successfully removed`,\r\n          status: 'success',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n        setFetchStatus(true);\r\n      })\r\n      .catch(() => {\r\n        toast({\r\n          title: 'Error',\r\n          description: `Data not found`,\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: 'top',\r\n        });\r\n        setFetchStatus(true);\r\n      });\r\n  };\r\n\r\n  const getMovieHandler = id => {\r\n    getMovie(id).then(res => {\r\n      setInput({\r\n        id: res.id,\r\n        title: res.title ?? 'null',\r\n        description: res.description ?? 'null',\r\n        year: res.year ?? 0,\r\n        duration: res.duration ?? 0,\r\n        genre: res.genre ?? 'null',\r\n        rating: res.rating ?? 0,\r\n        review: res.review ?? 'null',\r\n        image_url: res.image_url ?? 'null',\r\n      });\r\n      setCurrentId(res.id);\r\n      console.log(res);\r\n      console.log(currentId);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies,\r\n        setMovies,\r\n        isLoading,\r\n        setIsLoading,\r\n        fetchStatus,\r\n        setFetchStatus,\r\n        getMovieList,\r\n        input,\r\n        setInput,\r\n        currentId,\r\n        setCurrentId,\r\n        handleChange,\r\n        addMovieHandler,\r\n        deleteMovieHandler,\r\n        getMovieHandler,\r\n        updateMovieHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Image,\r\n  useColorModeValue,\r\n  Link,\r\n  Tooltip,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\nimport { StarIcon, TimeIcon, CalendarIcon } from '@chakra-ui/icons';\r\n\r\nconst MovieCard = ({ id, title, year, duration, rating, image_url }) => {\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\">\r\n      <Box\r\n        bg={useColorModeValue('gray.50', 'gray.700')}\r\n        maxW=\"250px\"\r\n        maxH=\"500px\"\r\n        borderWidth=\"1px\"\r\n        rounded=\"lg\"\r\n        shadow=\"lg\"\r\n        transform=\"scale(1.0)\"\r\n        transition=\"0.2s ease-in-out\"\r\n        overflow=\"hidden\"\r\n        _hover={{\r\n          transform: 'scale(1.05)',\r\n        }}\r\n      >\r\n        <Link\r\n          textDecoration=\"none\"\r\n          _hover={{ textDecoration: 'none' }}\r\n          as={ReachLink}\r\n          to={`/movie/details/${id}`}\r\n        >\r\n          <Image\r\n            src={image_url}\r\n            alt={title}\r\n            roundedTop=\"lg\"\r\n            objectFit=\"cover\"\r\n            w=\"300px\"\r\n            h=\"300px\"\r\n          />\r\n        </Link>\r\n\r\n        <Box p=\"4\">\r\n          <Box fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" isTruncated>\r\n            <Link as={ReachLink} to={`/movie/details/${id}`}>\r\n              <Tooltip label={title ?? 'null'} aria-label=\"A tooltip\">\r\n                {title ?? 'null'}\r\n              </Tooltip>\r\n            </Link>\r\n          </Box>\r\n\r\n          <Box\r\n            color=\"gray.500\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"wide\"\r\n            fontSize=\"xs\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n            <Flex alignItems=\"center\">\r\n              <TimeIcon mr={1} /> {duration ?? 'null'} menit &bull;{' '}\r\n              <CalendarIcon mx={1} /> {year ?? 'null'}\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Box d=\"flex\" mt=\"2\" alignItems=\"center\" align>\r\n            {Array(10)\r\n              .fill('')\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < rating ?? 0 ? 'teal.500' : 'gray.300'}\r\n                />\r\n              ))}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  Divider,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Link,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\r\nimport { MoviesContext } from '../../../store/MoviesContext';\r\nimport MovieCard from '../../Card/MovieCard';\r\n\r\nconst MovieSection = () => {\r\n  const { movies, isLoading, setFetchStatus } = useContext(MoviesContext);\r\n\r\n  useEffect(() => {\r\n    setFetchStatus(true);\r\n  }, []);\r\n\r\n  const sortMovie = movies.sort((a, b) =>\r\n    a.created_at < b.created_at ? 1 : -1\r\n  );\r\n\r\n  return (\r\n    <Box spacing={4}>\r\n      <VStack spacing={4} align=\"stretch\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Heading fontSize={'4xl'}>Latest Movies</Heading>\r\n          <Link as={ReachLink} to=\"/movies\">\r\n            <Button\r\n              rightIcon={<ArrowForwardIcon />}\r\n              colorScheme=\"blue\"\r\n              variant=\"outline\"\r\n            >\r\n              See more\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        <Divider borderColor=\"gray.200\" />\r\n        {isLoading ? (\r\n          <Box textAlign=\"center\">\r\n            <Spinner size=\"xl\" />\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Grid\r\n              templateColumns={{\r\n                base: 'repeat(2, 1fr)',\r\n                md: 'repeat(3, 1fr)',\r\n                lg: 'repeat(4, 1fr)',\r\n                xl: 'repeat(5, minmax(0, 1fr))',\r\n              }}\r\n              gap={3}\r\n              autoFlow=\"row\"\r\n            >\r\n              {sortMovie?.map(\r\n                (movie, index) =>\r\n                  index < 5 && (\r\n                    <GridItem key={movie.id}>\r\n                      <MovieCard\r\n                        id={movie.id}\r\n                        title={movie.title}\r\n                        image_url={movie.image_url}\r\n                        year={movie.year}\r\n                        duration={movie.duration}\r\n                        genre={movie.genre}\r\n                        rating={movie.rating}\r\n                      />\r\n                    </GridItem>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MovieSection;\r\n","import { Box, Flex, VStack } from '@chakra-ui/react';\r\nimport { useContext } from 'react';\r\n\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport Sidebar from '../../Sidebar/Sidebar';\r\nimport GameSection from './GameSection';\r\nimport MovieSection from './MovieSection';\r\n\r\nconst Home = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\" data-aos=\"fade-up\">\r\n        <VStack spacing={12} align=\"stretch\">\r\n          <MovieSection />\r\n          <GameSection />\r\n        </VStack>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React, { useContext } from 'react';\r\n\r\nimport {\r\n  chakra,\r\n  Avatar,\r\n  Flex,\r\n  useColorModeValue,\r\n  HStack,\r\n  Button,\r\n  useDisclosure,\r\n  Link,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDivider,\r\n} from '@chakra-ui/react';\r\nimport { Link as ReachLink, useHistory } from 'react-router-dom';\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { MdMovie, MdGames } from 'react-icons/md';\r\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function Nav() {\r\n  const { loginStatus, setLoginStatus } = useContext(AuthContext);\r\n  const bg = useColorModeValue('gray.50', 'gray.900');\r\n  const mobileNav = useDisclosure();\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    setLoginStatus(false);\r\n    Cookies.remove('email');\r\n    Cookies.remove('user');\r\n    Cookies.remove('token');\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  const auth = (\r\n    <>\r\n      <Link as={ReachLink} to=\"/sign-in\">\r\n        <Button\r\n          display={{ base: 'none', md: 'inline-flex' }}\r\n          fontSize={'sm'}\r\n          fontWeight={700}\r\n          variant=\"ghost\"\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </Link>\r\n      <Link as={ReachLink} to=\"/sign-up\">\r\n        <Button\r\n          display={{ base: 'none', md: 'inline-flex' }}\r\n          fontSize={'sm'}\r\n          fontWeight={700}\r\n          px={4}\r\n          color={'white'}\r\n          bg={'blue.500'}\r\n          href={'#'}\r\n          _hover={{\r\n            bg: 'blue.600',\r\n          }}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n\r\n  const avatar = (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          as={Button}\r\n          rounded={'full'}\r\n          variant={'link'}\r\n          cursor={'pointer'}\r\n          minW={0}\r\n        >\r\n          <Avatar bg=\"teal.500\" size=\"sm\" />\r\n        </MenuButton>\r\n\r\n        <MenuList>\r\n          <Link as={ReachLink} to=\"/change-password\">\r\n            <MenuItem>Change Password</MenuItem>\r\n          </Link>\r\n          <MenuDivider />\r\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <chakra.header bg={bg} w=\"full\" px={6} py={4} shadow=\"md\">\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\">\r\n          <HStack display=\"flex\" spacing={3} alignItems=\"center\">\r\n            <HStack spacing={3} display={{ base: 'none', md: 'inline-flex' }}>\r\n              <Link as={ReachLink} to=\"/\">\r\n                <Button variant=\"ghost\" leftIcon={<AiFillHome />} size=\"md\">\r\n                  Home\r\n                </Button>\r\n              </Link>\r\n              <Link as={ReachLink} to=\"/movies\">\r\n                <Button variant=\"ghost\" leftIcon={<MdMovie />} size=\"md\">\r\n                  Movies\r\n                </Button>\r\n              </Link>\r\n              <Link as={ReachLink} to=\"/games\">\r\n                <Button variant=\"ghost\" leftIcon={<MdGames />} size=\"md\">\r\n                  Games\r\n                </Button>\r\n              </Link>\r\n            </HStack>\r\n          </HStack>\r\n          <HStack\r\n            spacing={3}\r\n            display={mobileNav.isOpen ? 'none' : 'flex'}\r\n            alignItems=\"center\"\r\n          >\r\n            {loginStatus ? avatar : auth}\r\n            <ColorModeSwitcher />\r\n          </HStack>\r\n        </Flex>\r\n      </chakra.header>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { chakra, Box, Flex, Image, VStack, Text, Icon } from '@chakra-ui/react';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport { FaUserAlt, FaUserFriends, FaCheck, FaTimes } from 'react-icons/fa';\r\nimport { MdDevices, MdVideogameAsset } from 'react-icons/md';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getGame } from '../../services/gamesApi';\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst GameDetails = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const [gameDetails, setGameDetails] = useState([]);\r\n  const { Id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getGameDetails = async () => {\r\n      const data = await getGame(Id);\r\n      setGameDetails(data);\r\n    };\r\n\r\n    getGameDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box mx=\"auto\" data-aos=\"zoom-out\">\r\n        <Flex maxWidth=\"1000px\" mx=\"auto\" my={8} rounded=\"lg\">\r\n          <Box mr={4} maxW=\"400px\">\r\n            <Image\r\n              rounded=\"lg\"\r\n              objectFit=\"cover\"\r\n              w=\"400px\"\r\n              h=\"600px\"\r\n              src={gameDetails.image_url}\r\n              alt={gameDetails.name}\r\n            />\r\n          </Box>\r\n          <Box px={4} w=\"650px\">\r\n            <chakra.h1 fontSize=\"3xl\" fontWeight=\"bold\">\r\n              {`${gameDetails.name} (${gameDetails.release})`}\r\n            </chakra.h1>\r\n            <VStack\r\n              direction=\"column\"\r\n              flexGrow={1}\r\n              spacing={5}\r\n              alignItems=\"start\"\r\n              mt={4}\r\n            >\r\n              <Flex alignItems=\"center\">\r\n                <Icon as={MdDevices} h={5} w={5} mr={2} />\r\n                <Text fontWeight={700} mr={2}>\r\n                  Platform :{' '}\r\n                </Text>\r\n                <Text fontWeight={400}>{gameDetails.platform}</Text>\r\n              </Flex>\r\n\r\n              <Flex alignItems=\"center\">\r\n                <Icon as={MdVideogameAsset} h={5} w={5} mr={2} />\r\n                <Text fontWeight={700} mr={2}>\r\n                  Genre :{' '}\r\n                </Text>\r\n                <Text fontWeight={400}>{gameDetails.genre}</Text>\r\n              </Flex>\r\n\r\n              <Flex alignItems=\"center\">\r\n                <Icon as={FaUserAlt} h={5} w={5} mr={2} />\r\n                <Text fontWeight={700} mr={2}>\r\n                  Singleplayer :{' '}\r\n                </Text>\r\n                <Text fontWeight={400}>\r\n                  {gameDetails.singlePlayer === 1 ? <FaCheck /> : <FaTimes />}\r\n                </Text>\r\n              </Flex>\r\n\r\n              <Flex alignItems=\"center\">\r\n                <Icon as={FaUserFriends} h={5} w={5} mr={2} />\r\n                <Text fontWeight={700} mr={2}>\r\n                  Multiplayer :{' '}\r\n                </Text>\r\n                <Text fontWeight={400}>\r\n                  {gameDetails.multiplayer === 1 ? <FaCheck /> : <FaTimes />}\r\n                </Text>\r\n              </Flex>\r\n            </VStack>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default GameDetails;\r\n","import { Box, IconButton } from '@chakra-ui/react';\r\nimport { Table, Thead, Tbody, Tr, Th, Td, chakra } from '@chakra-ui/react';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\nimport { TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\r\nimport { MdNavigateBefore, MdNavigateNext } from 'react-icons/md';\r\n\r\nconst ListTable = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    prepareRow,\r\n  } = useTable({ columns, data }, useSortBy, usePagination);\r\n  const { pageIndex } = state;\r\n  return (\r\n    <>\r\n      <Table\r\n        {...getTableProps()}\r\n        variant=\"striped\"\r\n        colorScheme=\"blackAlpha\"\r\n        data-aos=\"fade-up\"\r\n      >\r\n        <Thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <Tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <Th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  isNumeric={column.isNumeric}\r\n                >\r\n                  {column.render('Header')}\r\n                  <chakra.span pl=\"4\">\r\n                    {column.isSorted ? (\r\n                      column.isSortedDesc ? (\r\n                        <TriangleDownIcon aria-label=\"sorted descending\" />\r\n                      ) : (\r\n                        <TriangleUpIcon aria-label=\"sorted ascending\" />\r\n                      )\r\n                    ) : null}\r\n                  </chakra.span>\r\n                </Th>\r\n              ))}\r\n            </Tr>\r\n          ))}\r\n        </Thead>\r\n        <Tbody {...getTableBodyProps()}>\r\n          {page.map(row => {\r\n            prepareRow(row);\r\n            return (\r\n              <Tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <Td\r\n                    {...cell.getCellProps()}\r\n                    isNumeric={cell.column.isNumeric}\r\n                  >\r\n                    {cell.render('Cell')}\r\n                  </Td>\r\n                ))}\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Box textAlign=\"center\">\r\n        <chakra.span mr={2}>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </chakra.span>\r\n        <IconButton\r\n          colorScheme=\"gray\"\r\n          aria-label=\"edit-button\"\r\n          size=\"md\"\r\n          icon={<MdNavigateBefore />}\r\n          mr={2}\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        />\r\n        <IconButton\r\n          colorScheme=\"gray\"\r\n          aria-label=\"edit-button\"\r\n          size=\"md\"\r\n          icon={<MdNavigateNext />}\r\n          mr={2}\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTable;\r\n","import {\r\n  Select,\r\n  Button,\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Link,\r\n  VStack,\r\n  InputGroup,\r\n  Input,\r\n  InputLeftElement,\r\n  IconButton,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { EditIcon, DeleteIcon, AddIcon } from '@chakra-ui/icons';\r\n\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport { MoviesContext } from '../../store/MoviesContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { getMovies } from '../../services/moviesApi';\r\nimport { useHistory, Link as ReachLink } from 'react-router-dom';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { MdRefresh } from 'react-icons/md';\r\nimport ListTable from '../ListTable/ListTable';\r\n\r\nconst MovieList = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const { movies, setFetchStatus, fetchStatus, deleteMovieHandler } =\r\n    useContext(MoviesContext);\r\n  const [data, setData] = useState([]);\r\n  let history = useHistory();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  const [movieId, setMovieId] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [filter, setFilter] = useState({\r\n    genre: '',\r\n    year: '',\r\n    rating: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getMovieList = async () => {\r\n      const result = await getMovies();\r\n      setData(result);\r\n    };\r\n    getMovieList();\r\n  }, [fetchStatus]);\r\n\r\n  useEffect(() => {\r\n    setData(movies.filter(item => item.title?.toLowerCase().includes(search)));\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const filterMovie = () => {\r\n      const filteredData = data.filter(\r\n        item =>\r\n          item.genre?.includes(filter.genre) &&\r\n          item.year?.toString().includes(filter.year) &&\r\n          item.rating?.toString().includes(filter.rating)\r\n      );\r\n      setData(filteredData);\r\n      if (data.length < 0) {\r\n        setFetchStatus(true);\r\n      }\r\n    };\r\n    filterMovie();\r\n  }, [filter]);\r\n\r\n  const handleSearch = event => {\r\n    const value = event.target.value;\r\n    setSearch(value);\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    setFilter({\r\n      ...filter,\r\n      [name]: value,\r\n    });\r\n    setData(movies);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilter({\r\n      genre: '',\r\n      year: '',\r\n      rating: '',\r\n    });\r\n    setData(movies);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setIsOpen(false);\r\n    deleteMovieHandler(movieId);\r\n  };\r\n\r\n  const handleEdit = id => {\r\n    history.push(`/movie/edit/${id}`);\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n        Cell: ({ value }) =>\r\n          value?.length > 25 ? `${value.substr(0, 25)}...` : value,\r\n      },\r\n      {\r\n        Header: 'Image',\r\n        accessor: 'image_url',\r\n        Cell: ({ value }) => (\r\n          <Image\r\n            src={value ?? 'null'}\r\n            alt={value}\r\n            rounded=\"lg\"\r\n            objectFit=\"cover\"\r\n            boxSize=\"80px\"\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Description',\r\n        accessor: 'description',\r\n        Cell: ({ value }) =>\r\n          value?.length > 50 ? `${value.substr(0, 50)}...` : value,\r\n      },\r\n      {\r\n        Header: 'Year',\r\n        accessor: 'year',\r\n        isNumeric: true,\r\n      },\r\n      {\r\n        Header: 'Duration',\r\n        accessor: 'duration',\r\n        isNumeric: true,\r\n      },\r\n      {\r\n        Header: 'Genre',\r\n        accessor: 'genre',\r\n      },\r\n      {\r\n        Header: 'Rating',\r\n        accessor: 'rating',\r\n        isNumeric: true,\r\n      },\r\n      {\r\n        Header: 'Review',\r\n        accessor: 'review',\r\n        Cell: ({ value }) =>\r\n          value?.length > 50 ? `${value.substr(0, 50)}...` : value,\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <Flex>\r\n            <IconButton\r\n              colorScheme=\"blue\"\r\n              aria-label=\"edit-btn\"\r\n              size=\"md\"\r\n              icon={<EditIcon />}\r\n              mr={2}\r\n              shadow=\"md\"\r\n              onClick={() => handleEdit(value)}\r\n            />\r\n            <IconButton\r\n              colorScheme=\"red\"\r\n              aria-label=\"delete-btn\"\r\n              size=\"md\"\r\n              shadow=\"md\"\r\n              icon={<DeleteIcon />}\r\n              onClick={() => {\r\n                setMovieId(value);\r\n                setIsOpen(true);\r\n              }}\r\n            />\r\n          </Flex>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\">\r\n        <Box spacing={4}>\r\n          <VStack spacing={4} align=\"stretch\">\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Heading fontSize={'4xl'}>Movie List</Heading>\r\n              <Link as={ReachLink} to=\"/movie/add\">\r\n                <Button\r\n                  leftIcon={<AddIcon />}\r\n                  colorScheme=\"blue\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  shadow=\"md\"\r\n                >\r\n                  Add new Movie\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Select\r\n                placeholder=\"Genre\"\r\n                name=\"genre\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.genre}\r\n              >\r\n                {movies\r\n                  .filter(\r\n                    (v, i, a) => a.findIndex(t => t.genre === v.genre) === i\r\n                  )\r\n                  .map(item => (\r\n                    <option value={item.genre}>{item.genre}</option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                placeholder=\"Year\"\r\n                name=\"year\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.year}\r\n              >\r\n                {movies\r\n                  .filter(\r\n                    (v, i, a) => a.findIndex(t => t.year === v.year) === i\r\n                  )\r\n                  .sort((a, b) => a.year - b.year)\r\n                  .map(item => (\r\n                    <option value={item.year?.toString()}>\r\n                      {item.year?.toString()}\r\n                    </option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                placeholder=\"Rating\"\r\n                name=\"rating\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.rating}\r\n              >\r\n                {movies\r\n                  .filter(\r\n                    (v, i, a) => a.findIndex(t => t.rating === v.rating) === i\r\n                  )\r\n                  .sort((a, b) => a.rating - b.rating)\r\n                  .map(item => (\r\n                    <option value={item.rating?.toString()}>\r\n                      {item.rating?.toString()}\r\n                    </option>\r\n                  ))}\r\n              </Select>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\">\r\n              <InputGroup w={300}>\r\n                <InputLeftElement\r\n                  pointerEvents=\"none\"\r\n                  children={<AiOutlineSearch />}\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleSearch}\r\n                  placeholder=\"Search by movie title\"\r\n                  shadow=\"md\"\r\n                />\r\n              </InputGroup>\r\n              <Button\r\n                colorScheme=\"gray\"\r\n                leftIcon={<MdRefresh />}\r\n                _focus={{ shadow: '' }}\r\n                size=\"md\"\r\n                shadow=\"md\"\r\n                onClick={resetFilter}\r\n              >\r\n                Reset Filter\r\n              </Button>\r\n            </Flex>\r\n\r\n            <ListTable columns={columns} data={data} />\r\n          </VStack>\r\n        </Box>\r\n      </Box>\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Movie\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={handleDelete} ml={3}>\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  VStack,\r\n  GridItem,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  Stack,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  NumberInput,\r\n  NumberInputField,\r\n  chakra,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useParams, Link as ReachLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport { MoviesContext } from '../../store/MoviesContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst MovieForm = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const {\r\n    input,\r\n    setInput,\r\n    currentId,\r\n    setCurrentId,\r\n    addMovieHandler,\r\n    getMovieHandler,\r\n    updateMovieHandler,\r\n  } = useContext(MoviesContext);\r\n\r\n  let { Id } = useParams();\r\n\r\n  console.log(Id);\r\n\r\n  useEffect(() => {\r\n    if (Id !== undefined) {\r\n      getMovieHandler(Id);\r\n    } else {\r\n      setInput({\r\n        title: '',\r\n        description: '',\r\n        year: 1980,\r\n        duration: 0,\r\n        genre: '',\r\n        rating: 0,\r\n        review: '',\r\n        image_url: '',\r\n      });\r\n      setCurrentId(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    if (currentId === null) {\r\n      addMovieHandler();\r\n    } else {\r\n      updateMovieHandler();\r\n    }\r\n\r\n    setInput({\r\n      title: '',\r\n      description: '',\r\n      year: 1980,\r\n      duration: 0,\r\n      genre: '',\r\n      rating: 0,\r\n      review: '',\r\n      image_url: '',\r\n    });\r\n    setCurrentId(null);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\" data-aos=\"fade-down\">\r\n        <Box spacing={4}>\r\n          <VStack spacing={4} align=\"stretch\">\r\n            <Heading fontSize={'4xl'}>Movie Form</Heading>\r\n            <Link as={ReachLink} to=\"/movie/list\">\r\n              <Button\r\n                leftIcon={<ArrowBackIcon />}\r\n                colorScheme=\"blue\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                Back to list\r\n              </Button>\r\n            </Link>\r\n            <Box mt={[10, 0]}>\r\n              <SimpleGrid display=\"grid\" columns=\"3\" spacing=\"6\">\r\n                <GridItem mt={[5, null, 0]} colSpan=\"2\">\r\n                  <chakra.form\r\n                    onSubmit={handleSubmit}\r\n                    shadow=\"base\"\r\n                    rounded={[null, 'md']}\r\n                    overflow={{ sm: 'hidden' }}\r\n                  >\r\n                    <Stack\r\n                      p={6}\r\n                      bg={useColorModeValue('white', 'gray.700')}\r\n                      spacing={6}\r\n                    >\r\n                      <SimpleGrid columns={6} spacing={6}>\r\n                        <FormControl as={GridItem} colSpan={[6, 3]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"title\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Title\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.title}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={[6, 3]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"genre\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Genre\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"genre\"\r\n                            id=\"genre\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.genre}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={[6, 6]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"description\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Description\r\n                          </FormLabel>\r\n                          <Textarea\r\n                            placeholder=\"Movie description\"\r\n                            name=\"description\"\r\n                            id=\"description\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.description}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={[6, 6]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"review\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Review\r\n                          </FormLabel>\r\n                          <Textarea\r\n                            onChange={handleChange}\r\n                            placeholder=\"Movie review\"\r\n                            name=\"review\"\r\n                            id=\"review\"\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.review}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                          as={GridItem}\r\n                          colSpan={[6, 6, null, 2]}\r\n                          isRequired\r\n                        >\r\n                          <FormLabel\r\n                            htmlFor=\"year\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Year\r\n                          </FormLabel>\r\n                          <NumberInput\r\n                            min={1980}\r\n                            max={2021}\r\n                            value={input.year}\r\n                            allowMouseWheel\r\n                          >\r\n                            <NumberInputField\r\n                              name=\"year\"\r\n                              id=\"year\"\r\n                              onChange={handleChange}\r\n                              mt={1}\r\n                              shadow=\"md\"\r\n                              rounded=\"md\"\r\n                            />\r\n                          </NumberInput>\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                          as={GridItem}\r\n                          colSpan={[6, 3, null, 2]}\r\n                          isRequired\r\n                        >\r\n                          <FormLabel\r\n                            htmlFor=\"duration\"\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"md\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Duration\r\n                          </FormLabel>\r\n                          <NumberInput\r\n                            size=\"md\"\r\n                            min={0}\r\n                            defaultValue={0}\r\n                            value={input.duration}\r\n                            allowMouseWheel\r\n                          >\r\n                            <NumberInputField\r\n                              name=\"duration\"\r\n                              id=\"duration\"\r\n                              onChange={handleChange}\r\n                              mt={1}\r\n                              shadow=\"md\"\r\n                              rounded=\"md\"\r\n                            />\r\n                          </NumberInput>\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                          as={GridItem}\r\n                          colSpan={[6, 3, null, 2]}\r\n                          isRequired\r\n                        >\r\n                          <FormLabel\r\n                            htmlFor=\"rating\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Rating\r\n                          </FormLabel>\r\n                          <NumberInput\r\n                            min={0}\r\n                            max={10}\r\n                            defaultValue={0}\r\n                            size=\"md\"\r\n                            value={input.rating}\r\n                          >\r\n                            <NumberInputField\r\n                              name=\"rating\"\r\n                              id=\"rating\"\r\n                              onChange={handleChange}\r\n                              mt={1}\r\n                              shadow=\"md\"\r\n                              rounded=\"md\"\r\n                            />\r\n                          </NumberInput>\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={6} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"image_url\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Image URL\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"image_url\"\r\n                            id=\"image_url\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.image_url}\r\n                          />\r\n                        </FormControl>\r\n                      </SimpleGrid>\r\n                    </Stack>\r\n                    <Box\r\n                      px={{ base: 4, sm: 6 }}\r\n                      py={3}\r\n                      bg={useColorModeValue('gray.50', 'gray.900')}\r\n                      textAlign=\"right\"\r\n                    >\r\n                      <Button\r\n                        type=\"submit\"\r\n                        colorScheme=\"teal\"\r\n                        _focus={{ shadow: '' }}\r\n                        fontWeight=\"md\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Box>\r\n                  </chakra.form>\r\n                </GridItem>\r\n              </SimpleGrid>\r\n            </Box>\r\n          </VStack>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","import {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Divider,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Spinner,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport MovieCard from '../../Card/MovieCard';\r\n\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport { MoviesContext } from '../../../store/MoviesContext';\r\nimport Sidebar from '../../Sidebar/Sidebar';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nconst Movies = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const { movies, isLoading, setFetchStatus } = useContext(MoviesContext);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFetchStatus(true);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    const title = event.target.value;\r\n    setSearch(title);\r\n    console.log(search);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\">\r\n        <VStack spacing={8} align=\"stretch\">\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Heading fontSize={'4xl'}>All Movies</Heading>\r\n            <InputGroup w={230}>\r\n              <InputLeftElement\r\n                pointerEvents=\"none\"\r\n                children={<AiOutlineSearch />}\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                onChange={handleChange}\r\n                shadow=\"md\"\r\n              />\r\n            </InputGroup>\r\n          </Flex>\r\n          <Divider borderColor=\"gray.200\" />\r\n          {isLoading ? (\r\n            <Box textAlign=\"center\">\r\n              <Spinner size=\"xl\" />\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <Grid\r\n                templateColumns={{\r\n                  base: 'repeat(2, minmax(0, 1fr))',\r\n                  md: 'repeat(3, minmax(0, 1fr))',\r\n                  lg: 'repeat(4, minmax(0, 1fr))',\r\n                  xl: 'repeat(5, minmax(0, 1fr))',\r\n                }}\r\n                gap={3}\r\n                data-aos=\"fade-up\"\r\n                autoFlow=\"row\"\r\n              >\r\n                {movies\r\n                  ?.filter(item => item.title?.toLowerCase().includes(search))\r\n                  .map(movie => (\r\n                    <GridItem key={movie.id}>\r\n                      <MovieCard\r\n                        id={movie.id}\r\n                        title={movie.title}\r\n                        image_url={movie.image_url}\r\n                        year={movie.year}\r\n                        duration={movie.duration}\r\n                        genre={movie.genre}\r\n                        rating={movie.rating}\r\n                      />\r\n                    </GridItem>\r\n                  ))}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </VStack>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Divider,\r\n  VStack,\r\n  Grid,\r\n  GridItem,\r\n  Spinner,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport { GamesContext } from '../../../store/GamesContext';\r\nimport Sidebar from '../../Sidebar/Sidebar';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport GameCard from '../../Card/GameCard';\r\n\r\nconst Games = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const { games, isLoading, setFetchStatus } = useContext(GamesContext);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFetchStatus(true);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    const title = event.target.value;\r\n    setSearch(title);\r\n    console.log(search);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\">\r\n        <VStack spacing={8} align=\"stretch\">\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Heading fontSize={'4xl'}>All Games</Heading>\r\n            <InputGroup w={230}>\r\n              <InputLeftElement\r\n                pointerEvents=\"none\"\r\n                children={<AiOutlineSearch />}\r\n              />\r\n              <Input\r\n                type=\"tel\"\r\n                placeholder=\"Search...\"\r\n                onChange={handleChange}\r\n                shadow=\"md\"\r\n              />\r\n            </InputGroup>\r\n          </Flex>\r\n          <Divider borderColor=\"gray.200\" />\r\n          {isLoading ? (\r\n            <Box textAlign=\"center\">\r\n              <Spinner size=\"xl\" />\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <Grid\r\n                templateColumns={{\r\n                  base: 'repeat(2, 1fr)',\r\n                  md: 'repeat(3, 1fr)',\r\n                  lg: 'repeat(4, 1fr)',\r\n                  xl: 'repeat(5, minmax(0, 1fr))',\r\n                }}\r\n                gap={3}\r\n                data-aos=\"fade-up\"\r\n              >\r\n                {games\r\n                  ?.filter(item => item.name?.toLowerCase().includes(search))\r\n                  .map(game => (\r\n                    <GridItem key={game.id}>\r\n                      <GameCard\r\n                        id={game.id}\r\n                        name={game.name}\r\n                        image_url={game.image_url}\r\n                        release={game.release}\r\n                        platform={game.platform}\r\n                        genre={game.genre}\r\n                        singlePlayer={game.singlePlayer}\r\n                        multiplayer={game.multiplayer}\r\n                      />\r\n                    </GridItem>\r\n                  ))}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </VStack>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","import {\r\n  chakra,\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useState } from 'react';\r\nimport { Link as ReachLink } from 'react-router-dom';\r\nimport { AuthContext } from '../../store/AuthContext';\r\n\r\nexport default function SignIn() {\r\n  const { userLogin } = useContext(AuthContext);\r\n  const [input, setInput] = useState({ email: '', password: '' });\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    userLogin({\r\n      email: input.email,\r\n      password: input.password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Stack\r\n        spacing={8}\r\n        mx={'auto'}\r\n        w={'lg'}\r\n        py={'40'}\r\n        px={6}\r\n        data-aos=\"zoom-in\"\r\n      >\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'4xl'}>Let's Begin</Heading>\r\n        </Stack>\r\n        <Box\r\n          rounded={'lg'}\r\n          bg={useColorModeValue('white', 'gray.700')}\r\n          boxShadow={'lg'}\r\n          p={8}\r\n        >\r\n          <Stack spacing={4}>\r\n            <chakra.form onSubmit={handleSubmit}>\r\n              <FormControl id=\"email\">\r\n                <FormLabel>Email address</FormLabel>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={input.email}\r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"password\">\r\n                <FormLabel>Password</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  value={input.password}\r\n                />\r\n              </FormControl>\r\n              <Stack spacing={10}>\r\n                <Stack\r\n                  direction={{ base: 'column', sm: 'row' }}\r\n                  align={'start'}\r\n                  justify={'space-between'}\r\n                >\r\n                  <Link as={ReachLink} color={'blue.400'} to=\"/sign-up\">\r\n                    Not have one ? Sign Up\r\n                  </Link>\r\n                </Stack>\r\n                <Button\r\n                  type=\"submit\"\r\n                  bg={'blue.400'}\r\n                  color={'white'}\r\n                  _hover={{\r\n                    bg: 'blue.500',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </Stack>\r\n            </chakra.form>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  Stack,\r\n  useColorModeValue,\r\n  Text,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { useContext, useState } from 'react';\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nexport default function ChangePassword() {\r\n  const { loginStatus, userChangePassword } = useContext(AuthContext);\r\n  const [input, setInput] = useState({\r\n    current_password: '',\r\n    new_password: '',\r\n    new_confirm_password: '',\r\n  });\r\n\r\n  let toast = useToast();\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (input.new_confirm_password !== input.new_password) {\r\n      toast({\r\n        title: 'Error.',\r\n        description: 'Your new password doesnt match',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n        position: 'top-right',\r\n      });\r\n      return;\r\n    }\r\n    if (!input.new_confirm_password !== input.new_password) {\r\n    }\r\n    userChangePassword({\r\n      current_password: input.current_password,\r\n      new_password: input.new_password,\r\n      new_confirm_password: input.new_confirm_password,\r\n    });\r\n  };\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Flex\r\n        mt={30}\r\n        mx=\"auto\"\r\n        w={'lg'}\r\n        align={'center'}\r\n        justify={'center'}\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        data-aos=\"zoom-in\"\r\n      >\r\n        <Stack\r\n          spacing={4}\r\n          w={'full'}\r\n          maxW={'md'}\r\n          bg={useColorModeValue('white', 'gray.700')}\r\n          rounded={'xl'}\r\n          boxShadow={'lg'}\r\n          p={6}\r\n          my={12}\r\n        >\r\n          <Heading lineHeight={1.1} fontSize={{ base: '2xl', md: '3xl' }}>\r\n            Enter new password\r\n          </Heading>\r\n          <Text fontSize=\"sm\" color=\"darkgrey\">\r\n            Password at least have 8 characters\r\n          </Text>\r\n          <FormControl id=\"current_password\" isRequired>\r\n            <FormLabel>Current Password</FormLabel>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"current_password\"\r\n              onChange={handleChange}\r\n              value={input.current_password}\r\n              shadow=\"md\"\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"new_password\" isRequired>\r\n            <FormLabel>New Password</FormLabel>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"new_password\"\r\n              onChange={handleChange}\r\n              value={input.new_password}\r\n              shadow=\"md\"\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"new_confirm_password\" isRequired>\r\n            <FormLabel>Confirm New Password</FormLabel>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"new_confirm_password\"\r\n              onChange={handleChange}\r\n              value={input.new_confirm_password}\r\n              shadow=\"md\"\r\n            />\r\n          </FormControl>\r\n          <Stack spacing={6}>\r\n            <Button\r\n              bg={'blue.400'}\r\n              shadow=\"md\"\r\n              color={'white'}\r\n              _hover={{\r\n                bg: 'blue.500',\r\n              }}\r\n              onClick={handleSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  chakra,\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  Text,\r\n} from '@chakra-ui/react';\r\n\r\nimport { useState, useContext } from 'react';\r\nimport { AuthContext } from '../../store/AuthContext';\r\n\r\nexport default function SignUp() {\r\n  const { userRegister } = useContext(AuthContext);\r\n  const [input, setInput] = useState({ name: '', email: '', password: '' });\r\n\r\n  const handleChange = event => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    userRegister({\r\n      name: input.name,\r\n      email: input.email,\r\n      password: input.password,\r\n    });\r\n  };\r\n  return (\r\n    <Flex>\r\n      <Stack\r\n        spacing={8}\r\n        mx={'auto'}\r\n        w={'lg'}\r\n        py={'36'}\r\n        px={6}\r\n        data-aos=\"zoom-in\"\r\n      >\r\n        <Stack align={'center'}>\r\n          <Heading fontSize={'4xl'}>Sign Up</Heading>\r\n        </Stack>\r\n        <Box\r\n          rounded={'lg'}\r\n          bg={useColorModeValue('white', 'gray.700')}\r\n          boxShadow={'lg'}\r\n          p={8}\r\n        >\r\n          <Stack spacing={4}>\r\n            <chakra.form onSubmit={handleSubmit}>\r\n              <FormControl id=\"name\" isRequired>\r\n                <FormLabel>Full Name</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={input.name}\r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"email\" isRequired>\r\n                <FormLabel>Email address</FormLabel>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  value={input.email}\r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"password\" isRequired>\r\n                <FormLabel>Password</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  value={input.password}\r\n                />\r\n              </FormControl>\r\n              <Text fontSize=\"sm\" color=\"darkgrey\">\r\n                Password at least have 8 characters\r\n              </Text>\r\n              <Stack spacing={10} mt={8}>\r\n                <Button\r\n                  bg={'blue.400'}\r\n                  color={'white'}\r\n                  _hover={{\r\n                    bg: 'blue.500',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Stack>\r\n            </chakra.form>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  Link,\r\n  VStack,\r\n  InputGroup,\r\n  Input,\r\n  InputLeftElement,\r\n  IconButton,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Select,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { EditIcon, DeleteIcon, AddIcon } from '@chakra-ui/icons';\r\nimport { FaCheck, FaTimes } from 'react-icons/fa';\r\nimport { MdRefresh } from 'react-icons/md';\r\n\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { useHistory, Link as ReachLink } from 'react-router-dom';\r\nimport { GamesContext } from '../../store/GamesContext';\r\nimport { getGames } from '../../services/gamesApi';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport ListTable from '../ListTable/ListTable';\r\n\r\nconst GameList = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const { deleteGameHandler, games, fetchStatus, setFetchStatus } =\r\n    useContext(GamesContext);\r\n  const [data, setData] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = useRef();\r\n  const [gameId, setGameId] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [filter, setFilter] = useState({\r\n    genre: '',\r\n    platform: '',\r\n    release: '',\r\n  });\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getGameList = async () => {\r\n      const result = await getGames();\r\n      setData(result);\r\n    };\r\n    getGameList();\r\n  }, [fetchStatus]);\r\n\r\n  useEffect(() => {\r\n    setData(games.filter(item => item.name?.toLowerCase().includes(search)));\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const filterGame = () => {\r\n      const filteredData = data.filter(\r\n        item =>\r\n          item.genre?.includes(filter.genre) &&\r\n          item.platform?.includes(filter.platform) &&\r\n          item.release?.includes(filter.release)\r\n      );\r\n      setData(filteredData);\r\n      if (data.length < 0) {\r\n        setFetchStatus(true);\r\n      }\r\n    };\r\n    filterGame();\r\n  }, [filter]);\r\n\r\n  const handleSearch = event => {\r\n    const value = event.target.value;\r\n    setSearch(value);\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    setFilter({\r\n      ...filter,\r\n      [name]: value,\r\n    });\r\n    setData(games);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilter({\r\n      genre: '',\r\n      platform: '',\r\n      release: '',\r\n    });\r\n    setData(games);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setIsOpen(false);\r\n    deleteGameHandler(gameId);\r\n    setFetchStatus(true);\r\n  };\r\n\r\n  const handleEdit = id => {\r\n    history.push(`/game/edit/${id}`);\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        Cell: ({ value }) =>\r\n          value?.length > 25 ? `${value.substr(0, 25)}...` : value,\r\n      },\r\n      {\r\n        Header: 'Image',\r\n        accessor: 'image_url',\r\n        Cell: ({ value }) => (\r\n          <Image\r\n            src={value ?? 'null'}\r\n            alt={value}\r\n            rounded=\"lg\"\r\n            objectFit=\"cover\"\r\n            boxSize=\"80px\"\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Genre',\r\n        accessor: 'genre',\r\n      },\r\n      {\r\n        Header: 'Platform',\r\n        accessor: 'platform',\r\n      },\r\n      {\r\n        Header: 'Release',\r\n        accessor: 'release',\r\n      },\r\n      {\r\n        Header: 'Singleplayer',\r\n        accessor: 'singlePlayer',\r\n        Cell: ({ value }) => (value === 1 ? <FaCheck /> : <FaTimes />),\r\n      },\r\n      {\r\n        Header: 'Multiplayer',\r\n        accessor: 'multiplayer',\r\n        Cell: ({ value }) => (value === 1 ? <FaCheck /> : <FaTimes />),\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        accessor: 'id',\r\n        Cell: ({ value }) => (\r\n          <Flex>\r\n            <IconButton\r\n              colorScheme=\"blue\"\r\n              aria-label=\"edit-button\"\r\n              size=\"md\"\r\n              icon={<EditIcon />}\r\n              mr={2}\r\n              onClick={() => handleEdit(value)}\r\n            />\r\n            <IconButton\r\n              colorScheme=\"red\"\r\n              aria-label=\"delete-button\"\r\n              size=\"md\"\r\n              icon={<DeleteIcon />}\r\n              onClick={() => {\r\n                setGameId(value);\r\n                setIsOpen(true);\r\n              }}\r\n            />\r\n          </Flex>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\">\r\n        <Box spacing={4}>\r\n          <VStack spacing={4} align=\"stretch\">\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Heading fontSize={'4xl'}>Game List</Heading>\r\n              <Link as={ReachLink} to=\"/game/add\">\r\n                <Button\r\n                  leftIcon={<AddIcon />}\r\n                  colorScheme=\"blue\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  Add new Game\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Select\r\n                placeholder=\"Genre\"\r\n                name=\"genre\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.genre}\r\n              >\r\n                {games\r\n                  .filter(\r\n                    (v, i, a) => a.findIndex(t => t.genre === v.genre) === i\r\n                  )\r\n                  .map(item => (\r\n                    <option value={item.genre}>{item.genre}</option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                placeholder=\"Release\"\r\n                name=\"release\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.release}\r\n              >\r\n                {games\r\n                  .filter(\r\n                    (v, i, a) => a.findIndex(t => t.release === v.release) === i\r\n                  )\r\n                  .sort((a, b) => a.release - b.release)\r\n                  .map(item => (\r\n                    <option value={item.release}>{item.release}</option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                placeholder=\"Platform\"\r\n                name=\"platform\"\r\n                onChange={handleFilter}\r\n                w={300}\r\n                value={filter.platform}\r\n              >\r\n                {games\r\n                  .filter(\r\n                    (v, i, a) =>\r\n                      a.findIndex(t => t.platform === v.platform) === i\r\n                  )\r\n                  .map(item => (\r\n                    <option value={item.platform}>{item.platform}</option>\r\n                  ))}\r\n              </Select>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\">\r\n              <InputGroup w={300}>\r\n                <InputLeftElement\r\n                  pointerEvents=\"none\"\r\n                  children={<AiOutlineSearch />}\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={handleSearch}\r\n                  placeholder=\"Search by game name\"\r\n                  shadow=\"md\"\r\n                />\r\n              </InputGroup>\r\n              <Button\r\n                colorScheme=\"gray\"\r\n                leftIcon={<MdRefresh />}\r\n                _focus={{ shadow: '' }}\r\n                size=\"md\"\r\n                shadow=\"md\"\r\n                onClick={resetFilter}\r\n              >\r\n                Reset Filter\r\n              </Button>\r\n            </Flex>\r\n\r\n            <ListTable columns={columns} data={data} />\r\n            \r\n          </VStack>\r\n        </Box>\r\n      </Box>\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={onClose}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Game\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure? You can't undo this action afterwards.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={cancelRef} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={handleDelete} ml={3}>\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default GameList;\r\n","import { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport {\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  VStack,\r\n  GridItem,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  Stack,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  NumberInput,\r\n  NumberInputField,\r\n  chakra,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useParams, Link as ReachLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../store/AuthContext';\r\nimport { GamesContext, initialGameInput } from '../../store/GamesContext';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst GameForm = () => {\r\n  const { loginStatus } = useContext(AuthContext);\r\n  const {\r\n    input,\r\n    setInput,\r\n    currentId,\r\n    setCurrentId,\r\n    addGameHandler,\r\n    updateGameHandler,\r\n    getGameHandler,\r\n    handleChange,\r\n  } = useContext(GamesContext);\r\n\r\n  let { Id } = useParams();\r\n\r\n  console.log(Id);\r\n\r\n  useEffect(() => {\r\n    if (Id !== undefined) {\r\n      getGameHandler(Id);\r\n    } else {\r\n      setInput(initialGameInput);\r\n      setCurrentId(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    if (currentId === null) {\r\n      addGameHandler();\r\n    } else {\r\n      updateGameHandler();\r\n    }\r\n\r\n    setInput(initialGameInput);\r\n    setCurrentId(null);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      {loginStatus && <Sidebar />}\r\n      <Box p={8} mx=\"auto\" w=\"1300px\" data-aos=\"fade-down\">\r\n        <Box spacing={4}>\r\n          <VStack spacing={4} align=\"stretch\">\r\n            <Heading fontSize={'4xl'}>Game Form</Heading>\r\n            <Link as={ReachLink} to=\"/game/list\">\r\n              <Button\r\n                leftIcon={<ArrowBackIcon />}\r\n                colorScheme=\"blue\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                Back to list\r\n              </Button>\r\n            </Link>\r\n            <Box mt={[10, 0]}>\r\n              <SimpleGrid display=\"grid\" columns=\"3\" spacing=\"6\">\r\n                <GridItem mt={[5, null, 0]} colSpan=\"2\">\r\n                  <chakra.form\r\n                    onSubmit={handleSubmit}\r\n                    shadow=\"base\"\r\n                    rounded={[null, 'md']}\r\n                    overflow={{ sm: 'hidden' }}\r\n                  >\r\n                    <Stack\r\n                      p={6}\r\n                      bg={useColorModeValue('white', 'gray.700')}\r\n                      spacing={6}\r\n                    >\r\n                      <SimpleGrid columns={6} spacing={6}>\r\n                        <FormControl as={GridItem} colSpan={[6, 3]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"name\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Name\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.name}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={[6, 3]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"genre\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Genre\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"genre\"\r\n                            id=\"genre\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            rounded=\"md\"\r\n                            value={input.genre}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={[6, 3]} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"platform\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Platform\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"platform\"\r\n                            id=\"platform\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            w=\"full\"\r\n                            rounded=\"md\"\r\n                            value={input.platform}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                          as={GridItem}\r\n                          colSpan={[6, 6, null, 2]}\r\n                          isRequired\r\n                        >\r\n                          <FormLabel\r\n                            htmlFor=\"release\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Release\r\n                          </FormLabel>\r\n                          <NumberInput\r\n                            defaultValue={2000}\r\n                            min={2000}\r\n                            max={2021}\r\n                            value={input.release}\r\n                            allowMouseWheel\r\n                          >\r\n                            <NumberInputField\r\n                              name=\"release\"\r\n                              id=\"release\"\r\n                              onChange={handleChange}\r\n                              mt={1}\r\n                              shadow=\"md\"\r\n                              w=\"full\"\r\n                              rounded=\"md\"\r\n                            />\r\n                          </NumberInput>\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} colSpan={6} isRequired>\r\n                          <FormLabel\r\n                            htmlFor=\"image_url\"\r\n                            fontSize=\"sm\"\r\n                            color={useColorModeValue('gray.700', 'gray.50')}\r\n                          >\r\n                            Image URL\r\n                          </FormLabel>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"image_url\"\r\n                            id=\"image_url\"\r\n                            onChange={handleChange}\r\n                            mt={1}\r\n                            shadow=\"md\"\r\n                            size=\"md\"\r\n                            w=\"full\"\r\n                            rounded=\"md\"\r\n                            value={input.image_url}\r\n                          />\r\n                        </FormControl>\r\n\r\n                        <FormControl as={GridItem} isRequired>\r\n                          <Checkbox\r\n                            name=\"singlePlayer\"\r\n                            id=\"singlePlayer\"\r\n                            shadow=\"sm\"\r\n                            size=\"md\"\r\n                            mt={1}\r\n                            onChange={handleChange}\r\n                            isChecked={input.singlePlayer}\r\n                          >\r\n                            Singleplayer\r\n                          </Checkbox>\r\n                        </FormControl>\r\n                        <FormControl as={GridItem} isRequired>\r\n                          <Checkbox\r\n                            name=\"multiplayer\"\r\n                            id=\"multiplayer\"\r\n                            shadow=\"sm\"\r\n                            size=\"md\"\r\n                            mt={1}\r\n                            onChange={handleChange}\r\n                            isChecked={input.multiplayer}\r\n                          >\r\n                            Multiplayer\r\n                          </Checkbox>\r\n                        </FormControl>\r\n                      </SimpleGrid>\r\n                    </Stack>\r\n                    <Box\r\n                      px={{ base: 4, sm: 6 }}\r\n                      py={3}\r\n                      bg={useColorModeValue('gray.50', 'gray.900')}\r\n                      textAlign=\"right\"\r\n                    >\r\n                      <Button\r\n                        type=\"submit\"\r\n                        colorScheme=\"teal\"\r\n                        _focus={{ shadow: '' }}\r\n                        fontWeight=\"md\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Box>\r\n                  </chakra.form>\r\n                </GridItem>\r\n              </SimpleGrid>\r\n            </Box>\r\n          </VStack>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default GameForm;\r\n","import { ChakraProvider, theme, useToast } from '@chakra-ui/react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport MovieDetails from '../components/Details/MovieDetails';\r\nimport Footer from '../components/Layout/Footer';\r\nimport Home from '../components/Pages/Home/Home';\r\nimport Nav from '../components/Layout/Nav';\r\n\r\nimport { AuthProvider } from '../store/AuthContext';\r\nimport { GamesProvider } from '../store/GamesContext';\r\nimport { MoviesProvider } from '../store/MoviesContext';\r\nimport Cookies from 'js-cookie';\r\nimport GameDetails from '../components/Details/GameDetails';\r\nimport MovieList from '../components/MovieList/MovieList';\r\nimport MovieForm from '../components/MovieForm/MovieForm';\r\nimport Movies from '../components/Pages/Movies/Movies';\r\nimport Games from '../components/Pages/Games/Games';\r\nimport SignIn from '../components/Auth/SignIn';\r\nimport ChangePassword from '../components/Auth/ChangePassword';\r\nimport SignUp from '../components/Auth/SignUp';\r\nimport GameList from '../components/GameList/GameList';\r\nimport GameForm from '../components/GameForm/GameForm';\r\n\r\nconst Routes = () => {\r\n  const LoginRoute = ({ ...props }) => {\r\n    if (Cookies.get('token') !== undefined) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return <Route {...props} />;\r\n    }\r\n  };\r\n\r\n  const RestrictedRoutes = ({ ...props }) => {\r\n    if (Cookies.get('token') === undefined) {\r\n      return <Redirect to=\"/sign-in\" />;\r\n    } else {\r\n      return <Route {...props} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <ChakraProvider theme={theme}>\r\n        <AuthProvider>\r\n          <MoviesProvider>\r\n            <GamesProvider>\r\n              <Nav />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Home />\r\n                </Route>\r\n                <Route path=\"/movies\" exact>\r\n                  <Movies />\r\n                </Route>\r\n                <Route path=\"/games\" exact>\r\n                  <Games />\r\n                </Route>\r\n                <LoginRoute path=\"/sign-in\" exact>\r\n                  <SignIn />\r\n                </LoginRoute>\r\n                <LoginRoute path=\"/sign-up\" exact>\r\n                  <SignUp />\r\n                </LoginRoute>\r\n                <RestrictedRoutes path=\"/change-password\" exact>\r\n                  <ChangePassword />\r\n                </RestrictedRoutes>\r\n                <Route path=\"/movie/details/:Id\" exact>\r\n                  <MovieDetails />\r\n                </Route>\r\n                <Route path=\"/game/details/:Id\" exact>\r\n                  <GameDetails />\r\n                </Route>\r\n                <RestrictedRoutes path=\"/movie/list\" exact>\r\n                  <MovieList />\r\n                </RestrictedRoutes>\r\n                <RestrictedRoutes path=\"/movie/add\" exact>\r\n                  <MovieForm />\r\n                </RestrictedRoutes>\r\n                <RestrictedRoutes path=\"/movie/edit/:Id\" exact>\r\n                  <MovieForm />\r\n                </RestrictedRoutes>\r\n                <RestrictedRoutes path=\"/game/list\" exact>\r\n                  <GameList />\r\n                </RestrictedRoutes>\r\n                <RestrictedRoutes path=\"/game/add\" exact>\r\n                  <GameForm />\r\n                </RestrictedRoutes>\r\n                <RestrictedRoutes path=\"/game/edit/:Id\" exact>\r\n                  <GameForm />\r\n                </RestrictedRoutes>\r\n              </Switch>\r\n              <Footer />\r\n            </GamesProvider>\r\n          </MoviesProvider>\r\n        </AuthProvider>\r\n      </ChakraProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\nimport AOS from 'aos';\nimport Routes from './routes/Routes';\n\nfunction App() {\n  useEffect(() => {\n    AOS.init({\n      duration: 500,\n    });\n  }, []);\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/style.css';\nimport 'aos/dist/aos.css';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}